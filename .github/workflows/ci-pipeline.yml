name: Microservices CI Pipeline

on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - '**.md'
      - 'terraform/**'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  DOCKER_HUB_USERNAME: huzaifanasirrr

jobs:
  validate:
    name: Validate Kubernetes Manifests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install kubeval
        run: |
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          chmod +x kubeval
          sudo mv kubeval /usr/local/bin
      
      - name: Validate Kubernetes manifests
        run: |
          kubeval --ignore-missing-schemas k8s/*.yaml

  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        service: [adservice, cartservice, checkoutservice, currencyservice, emailservice, frontend, paymentservice, productcatalogservice, recommendationservice, shippingservice]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_HUB_USERNAME }}/online-boutique-${{ matrix.service }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            latest
      
      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v4
        with:
          context: ./src/${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-deployment:
    name: Test Deployment Configuration
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up kind
        uses: helm/kind-action@v1.5.0
      
      - name: Test deploy to local Kubernetes
        run: |
          # Create namespace
          kubectl create namespace test-deployment
          
          # Apply ConfigMap and Secrets if they exist
          if [ -f "k8s/service-config.yaml" ]; then
            kubectl apply -f k8s/service-config.yaml -n test-deployment
          fi
          
          if [ -f "k8s/service-secrets.yaml" ]; then
            kubectl apply -f k8s/service-secrets.yaml -n test-deployment
          fi
          
          # Apply Redis first
          kubectl apply -f k8s/redis-cart.yaml -n test-deployment
          
          # Apply sample manifests to verify configuration is valid
          # We're not waiting for actual pods to be ready since we're using external images
          kubectl apply -f k8s/adservice.yaml -n test-deployment
          kubectl apply -f k8s/frontend.yaml -n test-deployment
          kubectl apply -f k8s/cartservice.yaml -n test-deployment
          
          # Verify deployments were created
          kubectl get deployments -n test-deployment
      
      - name: Generate k8s manifest report
        run: |
          echo "## Kubernetes Manifests Summary" > k8s_report.md
          echo "### Services configured:" >> k8s_report.md
          
          for manifest in k8s/*.yaml; do
            if [ -f "$manifest" ]; then
              echo "- $(basename $manifest)" >> k8s_report.md
            fi
          done
          
          echo "" >> k8s_report.md
          echo "### CI test deployment successful" >> k8s_report.md
          echo "Successfully validated manifest configuration in a test Kubernetes cluster." >> k8s_report.md
      
      - name: Upload manifest report
        uses: actions/upload-artifact@v3
        with:
          name: kubernetes-manifests-report
          path: k8s_report.md